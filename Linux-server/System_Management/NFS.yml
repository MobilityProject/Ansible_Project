---

# handler import
#

# NFS와 관련한 Process id가 존재하는 지 확인 
- name: Return True If NFS Service is Exists
  command: pgrep nfsd
  register: nfsd_pid
  ignore_errors: yes
  changed_when: false
  failed_when: nfsd_pid.rc != 0 and nfsd_pid.stdout_lines | length > 0

# NFS와 관련한 Process들을 전부 종료
- name: Kill NFS Deamon
  shell: kill -9 {{ item }}
  when: item is define
  loop: "{{ nfsd_pid.stdout_lines }}"
  register: kill_result

# 종료시킨 프로세스 리스트 출력
- name: Get Result Kill NFS Deamon
  debug:
    msg: "Kill Nfs deamons with Pid: {{ item }}"
  loop: "{{ kill_result.results }}"
  when: item is defined and item.rc == 0

# nis와 nis+ 관련 프로세스가 존재하는 지 확인
- name: Return True If NIS or NIS+ is Exists
  shell: # ps -ef | egrep “ypserv|ypbind|ypxfrd|rpc.yppasswdd|rpc.ypupdated” | grep –v "grep“
  register: nis_processes
  ignore_errors: yes
  changed_when: false
  failed_when: nis_processes.rc != 0 and nis_processes.stdout_lines | length > 0

# nis, nis+ 프로세스 종료
- name: Kill NIS Processes
  shell: kill -9 {{ item }}
  loop: "{{ nis_processes.stdout_lines }}"
  when: item is defined and item.rc == 0
  register: nis_kill_result

# 종료 시킨 nis, nis+ 프로세스 출력
- name: Get Result Kill NIS, NIS+ Process
  debug:
    msg: "Kill Nis deamons with Pid: {{ item }}"
  loop: "{{ nis_kill_result.results }}"
  when: item is defined and item.rc == 0

